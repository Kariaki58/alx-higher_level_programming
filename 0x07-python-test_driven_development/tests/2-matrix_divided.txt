>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> print(matrix_divided([[2]], 2))
[[1.0]]
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 4))
[[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]
>>> print(matrix_divided("hello", 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([2, 3, 4], 4))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided(4, 4))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([[4, 2, 3], [1, 2, 3, 4]], 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> print(matrix_divided([[4, 2, 3], [1, 2, 3, 4]], 4))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([[4, 2, 3], [1, 2, 3]], "hello"))
Traceback (most recent call last):
TypeError: div must be a number
>>> print(matrix_divided([[4, 2, 3], [8, 12, 13]], float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> print(matrix_divided())
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> print(matrix_divided([[1, 2, 3]]))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'